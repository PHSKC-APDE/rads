% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chars_functions.R
\name{chars_icd_ccs_count}
\alias{chars_icd_ccs_count}
\title{Count (non-injury) Comprehensive Hospital Abstract Reporting System
(CHARS) hospitalizations}
\usage{
chars_icd_ccs_count(
  ph.data = NULL,
  icd10cm = NULL,
  level1 = NULL,
  level2 = NULL,
  level3 = NULL,
  icdcol = "diag1",
  group_by = NULL,
  kingco = T
)
}
\arguments{
\item{ph.data}{a data.table or data.frame. Must contain CHARS data structured
with one person per row and with at least one column of ICD10-cm codes.

\strong{NOTE!} ph.data must have a column named \code{seq_no}, which is a unique patient
level identifier.

The default is \code{ph.data = NULL}}

\item{icd10cm}{a character vector of length 1. An ICD10-CM description OR code.
It is case agnostic and works with partial strings. For example, both
'rotavira' & 'A080' would provide the results for 'Rotaviral enteritis'. You
can also combine multiple search terms. For example, 'rotavira|choler' would
count all Rotaviral enteritis and cholera hospitalizations. View
available options with \code{View(chars_icd_ccs()[, .(icd10_code, icd10)])}.

The default is \code{icd10 = NULL}}

\item{level1}{a character vector of length 1. View available options with
\code{chars_icd_ccs('level1')}.

The default is \code{level1 = NULL}}

\item{level2}{a character vector of length 1. View available options with
\code{chars_icd_ccs('level2')}.

The default is \code{level2 = NULL}}

\item{level3}{a character vector of length 1. View available options with
\code{chars_icd_ccs('level3')}.

The default is \code{level3 = NULL}}

\item{icdcol}{a character vector of length one that specifies the name of the
column in ph.data that contains the ICD10-cm codes of interest.

The default is \code{icdcol = 'diag1'}, which refers to the principal
diagnosis code provided by \code{get_data_chars()}).}

\item{group_by}{a character vector of indeterminate length. This is used to
specify all the variables by which you want to group (a.k.a. stratify) the
results. For example, if you specified \code{group_by = c('chi_sex',
'chi_race_6')}, the results would be stratified by each combination of sex
and race.

The default is \code{group_by = NULL}}

\item{kingco}{a logical vector of length one. It specifies whether you want to
limit the analysis to King County. \strong{NOTE} this only works with data imported
with the \code{get_data_chars()} function because it needs the logical variable
\code{chi_geo_kc}.

The default is \code{kingco = TRUE}.}
}
\value{
Generates a table with columns for each of the search terms you entered (e.g.,
\code{icd10}, \code{level1}, \code{level2}, and/or \code{level3}) as well as
any \code{group_by} variables and a column named \code{hospitalizations} that
contains the relevant counts.
}
\description{
Generate hospitalization counts from WA State Comprehensive Hospital
Abstract Reporting System (CHARS) data using partial strings from the ICD10-cm
or CCS (levels 1 - 3) descriptions. Needs line-level CHARS data with a
properly formatted ICD10-cm column (e.g., the data available from
\code{get_data_chars()}).

See \code{chars_icd_ccs()} for a complete list of available ICD10-cm and CCS
descriptions.
}
\details{
This function needs the user to enter a search string in one or more of the
following arguments in order to search the CHARS data for the corresponding
ICD10-cm codes: \code{icd10}, \code{level1}, \code{level2}, or \code{level3}.
Partial search terms are acceptable and they are case-insensitive. For
example, if you set \code{level1 = 'ous'}, the function would return counts
for three categories of hospitalization: "Diseases of the nervOUS system and
sense organs", "InfectiOUS and parasitic diseases", "Diseases of the skin and
subcutaneOUS tissue". It also understands simple regex syntax, including '^',
'$', and '|'.
}
\examples{
# example: 2019 King County hospitalizations for chemotherapy, by sex
\dontrun{
blah = get_data_chars(year = 2019, kingco = TRUE)
myresult <- chars_icd_ccs_count(ph.data = blah,
                                level3 = 'chemotherapy',
                                group_by = c('chi_sex'))
print(myresult)
}

}
