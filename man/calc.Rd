% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc.R, R/calc.data.table.R, R/calc.tbl_svy.R
\name{calc}
\alias{calc}
\alias{calc.data.table}
\alias{calc.tbl_svy}
\title{Compute metrics from record (e.g. vital stats) or survey data}
\usage{
calc(ph.data, ...)

\method{calc}{data.table}(
  ph.data,
  what,
  ...,
  by = NULL,
  metrics = c("mean", "numerator", "denominator", "missing", "obs"),
  per = NULL,
  win = NULL,
  time_var = "chi_year",
  proportion = FALSE,
  verbose = FALSE
)

\method{calc}{tbl_svy}(
  ph.data,
  what,
  ...,
  by = NULL,
  metrics = c("mean", "numerator", "denominator", "missing", "total"),
  per = NULL,
  win = NULL,
  time_var = "chi_year",
  proportion = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{ph.data}{data.table or tbl_svy. Dataset.}

\item{...}{expressions to be passed to \code{\link{filter}} (or equivalent)}

\item{what}{character vector. Variable to calculate metrics for.}

\item{by}{character vector. Must refer to variables within ph.data. The variables within ph.data to compute `what` by}

\item{metrics}{character. See \code{\link{record_metrics}} for the available options. Note, except when 'distinct' is
selected, all metrics are calculated -- this argument just specifies which one gets returned}

\item{per}{integer. The denominator when "rate" or "adjusted-rate" are selected as the metric. Metrics will be multiplied by this value.}

\item{win}{integer. The number of consectutive units of time (e.g., years, months, etc.) over which the metrics will be calculated,
i.e., the 'window' for a rolling average, sum, etc.}

\item{time_var}{character. The name of the time variable in the dataset. Used in combination with the "win" argument to do time windowed calculations.}

\item{proportion}{logical. For survey data, should metrics be calculated assuming the output is proportion-like? See details for more.
Currently does not have functionality for non-survey data.}

\item{verbose}{logical. Mostly unused, but toggles on/off printed warnings.}
}
\value{
a data.table containing the results
}
\description{
Compute metrics from record (e.g. vital stats) or survey data
}
\details{
This function calculates `metrics` for each variable in `what` from rows meeting the conditions specified
by `...` (i.e., where), for each grouping implied by `by`.

Available metrics include:
1) mean, se, upper, lower: Average response and associated metrics of uncertainty. Underlying ci (e.g. upper and lower) is 95%
2) rate, rate_se, rate_upper, rate_lower: mean \* per and associated metrics of uncertainty \* per. Underlying ci (e.g. upper and lower) is 95%
3) total, total_se, total_upper, total_lower: Count of people with the given value. Mostly relevent for surveys (where total is approximately mean * sum(pweights)). SE/Upper/Lower only valid for survey data
4) numerator: sum of non-na values for `what``
5) denominator: number of rows where `what` is not NA
6) missing, missing.prop: Number of rows in a given grouping with an NA value for `what`. missing + denominator = Number of people in a given group.
   When `what` is a factor/character, the missing information is provided for the other
7) rse: relative standard error. mean/se
8) ndistinct: number of non-na distinct values `what` takes on in a given grouping (after filtering and all that jazz)
9) obs: number of unique observations
10) median: the median non NA response. Not populated when `what` is a factor or character. Even for surveys, the median is the unweighted result.
11) unique.time: Number of unique time points (from `time_var`) included in each tabulation

For survey data, use the \code{proportion} argument where relevant to ensure metrics are calculated using special proportion (e.g \code{svyciprop})
methods. That is, when you want to find the fraction of ____, toggle \code{proportion} to \code{TRUE}.
}
\examples{

#record data
test.data <- get_data_birth(year = 2015:2017)

test.results <- calc(test.data,
                     what = c("kotelchuck", "fetal_pres"),
                     "chi_year == 2016 & chi_sex \%in\% c('Male', 'Female')",
                      by = c("chi_year", "chi_sex"),
                      metrics = c("mean", "numerator", "denominator",
                                  "total", "lower", "upper", "se"))

}
