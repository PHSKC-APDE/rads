% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_modeler.R
\name{data_modeler_annualized}
\alias{data_modeler_annualized}
\title{PROTOTYPE CODE: Generate synthetic data for use in public sharing or testing but with years}
\usage{
data_modeler_annualized(
  ph.data,
  number_of_observations = 100,
  years = as.numeric(format(Sys.Date(), "\%Y")) - 1,
  comments = TRUE,
  return_code = FALSE,
  print_code = TRUE,
  seed = 98104
)
}
\arguments{
\item{ph.data}{a data.table or data.frame containing the data to be age-standardized.}

\item{number_of_observations}{Character vector of any length or integer greater than 1. Strings will appear in code as a variable, integers as an integer. If requesting output as data, must be an integer}

\item{years}{integer with number of years to use}

\item{comments}{Logical vector of length 1. Indicate if code should include comments. Comments describe how each column was defined.}

\item{return_code}{Logical vector of length 1. Indicates if the user wants the function to return a data.table containing lists of strings of code used to model the data (TRUE) or a data.table of the synthetic data (FALSE)}

\item{print_code}{Logical vector of length 1. Indicates if the code generated by the modeler should be printed to console.
Note, if you with to copy and paste the code for use in your own work, it is recommended to use this console output.}
}
\value{
Outputs code block to terminal and if (return_code = FALSE) returns a DT of the synthetic data. If (return_code = TRUE) returns a DT of character vectors used to create the code strings. If (comments = TRUE) code will include comments describing the data type of each column.
}
\description{
Receives a data table of public health data and returns a synthetic version that is identically structured but uncorrelated. User may request results as a DT or as code that will generate the data once executed.
}
\examples{
\donttest{
# Observe that modeled data looks like original data
library(data.table)
ph.data <- get_data_birth(cols = c('race4', 'chi_age', 'hra20_name',
                                   'sex', 'birth_weight_grams'))
DT.synthetic.data <- data_modeler(ph.data = ph.data,
                                  number_of_observations =  10000,
                                  comments = TRUE,
                                  return_code = FALSE,
                                  print_code = FALSE)

str(ph.data)
str(DT.synthetic.data)


# Manually convert received code into data

DT.code <- data_modeler(ph.data = ph.data,
                                  number_of_observations =  10000,
                                  comments = TRUE,
                                  return_code = TRUE,
                                  print_code = TRUE)
codeListParsed <- c(list("DT <- data.table("),gsub(" #", ", #",
                    DT.code[1:(length(DT.code)-1)]), gsub(" #",") #",
                    DT.code[length(DT.code)]))
codeText <- paste(unlist(codeListParsed), collapse =" \n" )
DT.synthetic.data.manual <- eval( parse(text = paste0(codeText)))

str(ph.data)
str(DT.synthetic.data.manual)
}

}
\references{
\url{CREATE A WIKI FOR THIS}
}
